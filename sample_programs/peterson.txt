shared var lock0 = False;
shared var lock1 = False;

shared var turn = 0;
shared var bankAccount = 0;

var thread0 = fork {
        var counter = 100;
        while counter {
        lock0 = True;
        turn = 1;

        while (lock1 == True && turn == 1)
        {
            // busy wait
            ;
        }

        // critical section
        bankAccount = bankAccount + 1;
        print bankAccount;
        // end of the critical section

        lock0 = False;
        counter = counter - 1;
        }
};
var thread1 = fork {
        var counter = 100;
        while counter {
        lock1 = True;
        turn = 0;

        while (lock0 == True && turn == 0)
        {
            // busy wait
            ;
        }

        // critical section
        bankAccount = bankAccount - 1;
        print bankAccount;
        // end of the critical section

        lock1 = False;
        counter = counter - 1;
        }
};

join thread1;
join thread0;
print bankAccount;
